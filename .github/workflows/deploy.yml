name: Deploy to AWS ECS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  ECR_REPO_SERVER: chat-pilot-ai/server
  ECR_REPO_APP: chat-pilot-ai/app
  ECS_CLUSTER: chat-pilot-cluster
  ECS_SERVICE_SERVER: server-service
  ECS_SERVICE_APP: shopify-app-service

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and push server image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO_SERVER:latest -f Dockerfile.server .
          docker push $ECR_REGISTRY/$ECR_REPO_SERVER:latest

      - name: Build and push shopify-app image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO_APP:latest -f Dockerfile.app .
          docker push $ECR_REGISTRY/$ECR_REPO_APP:latest

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE_SERVER --force-new-deployment
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE_APP --force-new-deployment
